{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useEffect, useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function DangNhap(_ref) {\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(0),\n    _useState6 = _slicedToArray(_useState5, 2),\n    verify = _useState6[0],\n    setVerify = _useState6[1];\n  useEffect(function () {\n    fetch('http://localhost:3000/dbUser').then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      handleLogin(data);\n    });\n  }, [verify]);\n  function handleLogin(dbuser) {\n    console.log(username, password);\n    if (username || password) {\n      var un = dbuser.some(function (elem) {\n        return username == elem.userName || username == elem.email;\n      });\n      var pwd = dbuser.some(function (elem) {\n        return password == elem.password;\n      });\n      var userid = dbuser.filter(function (elem, index) {\n        return username == elem.userName || username == elem.email;\n      });\n      if (un) {\n        if (pwd) {\n          navigation.navigate('Notes', {\n            userid: userid[0].userId\n          });\n        }\n        console.log('Login Failed');\n      }\n      console.log('Login Failed');\n    } else console.log('Please Input!!');\n  }\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.top,\n      children: _jsx(Text, {\n        style: styles.titleScreen,\n        children: \"Login\"\n      })\n    }), _jsxs(View, {\n      style: styles.middle,\n      children: [_jsx(TextInput, {\n        onChangeText: function onChangeText(e) {\n          return setUsername(e);\n        },\n        value: username,\n        style: styles.textInputUsername,\n        placeholder: \"Email or User Name (jiag293 ho\\u1EB7c jiag293@gmail.com)\",\n        keyboardType: \"default\"\n      }), _jsx(TextInput, {\n        onChangeText: function onChangeText(e) {\n          return setPassword(e);\n        },\n        value: password,\n        style: styles.textInputPassword,\n        placeholder: \"Password (1010101010)\",\n        keyboardType: \"visible-password\"\n      })]\n    }), _jsxs(View, {\n      style: styles.middle1,\n      children: [_jsx(Text, {\n        style: styles.textPolicy,\n        children: \"By continuing, you agree to our \"\n      }), _jsx(Pressable, {\n        onPress: function onPress() {},\n        children: function children(_ref2) {\n          var pressed = _ref2.pressed;\n          return pressed ? _jsx(Text, {\n            style: styles.textPolicyReadClick,\n            children: \"Terms of Service\"\n          }) : _jsx(Text, {\n            style: styles.textPolicyRead,\n            children: \"Terms of Service\"\n          });\n        }\n      }), _jsx(Text, {\n        style: styles.textPolicy,\n        children: \" and \"\n      }), _jsx(Pressable, {\n        onPress: function onPress() {},\n        children: function children(_ref3) {\n          var pressed = _ref3.pressed;\n          return pressed ? _jsx(Text, {\n            style: styles.textPolicyReadClick,\n            children: \"Privacy Policy.\"\n          }) : _jsx(Text, {\n            style: styles.textPolicyRead,\n            children: \"Privacy Policy.\"\n          });\n        }\n      })]\n    }), _jsx(View, {\n      style: styles.bottom,\n      children: _jsx(Pressable, {\n        style: function style(_ref4) {\n          var pressed = _ref4.pressed;\n          return [styles.buttonLogin, {\n            backgroundColor: pressed ? '#c4bbf0' : '#6B4EFF'\n          }];\n        },\n        onPress: function onPress() {\n          return setVerify(verify + 1);\n        },\n        children: _jsx(Text, {\n          style: styles.textButtonLogin,\n          children: \"Login\"\n        })\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#FADFE3',\n    height: '100%'\n  },\n  top: {\n    flex: 0.2,\n    alignSelf: 'center'\n  },\n  middle: {\n    flex: 0.2,\n    marginVertical: 100,\n    marginHorizontal: 20\n  },\n  middle1: {\n    flex: 0.1,\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    marginHorizontal: 20,\n    marginTop: 100\n  },\n  bottom: {\n    flex: 0.15,\n    marginVertical: 20\n  },\n  titleScreen: {\n    fontFamily: 'sans-serif',\n    fontSize: 32,\n    color: '#000000',\n    fontWeight: '700',\n    marginVertical: 20\n  },\n  textInputUsername: {\n    borderRadius: 10,\n    backgroundColor: '#ffffff',\n    padding: 20,\n    marginVertical: 5,\n    fontSize: 18\n  },\n  textInputPassword: {\n    borderRadius: 10,\n    backgroundColor: '#ffffff',\n    padding: 20,\n    marginVertical: 5,\n    fontSize: 18\n  },\n  buttonLogin: {\n    flex: 1,\n    justifyContent: 'center',\n    borderRadius: 30,\n    marginHorizontal: 20\n  },\n  textButtonLogin: {\n    fontFamily: 'sans-serif',\n    fontSize: 18,\n    fontWeight: '500',\n    color: '#ffffff',\n    alignSelf: 'center'\n  },\n  textPolicy: {\n    fontFamily: 'sans-serif',\n    fontSize: 13,\n    color: '#000000',\n    fontWeight: '300'\n  },\n  textPolicyRead: {\n    fontFamily: 'sans-serif',\n    fontSize: 13,\n    color: '#6B4EFF',\n    fontWeight: '300'\n  },\n  textPolicyReadClick: {\n    fontFamily: 'sans-serif',\n    fontSize: 13,\n    color: '#c4bbf0',\n    fontWeight: '300'\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","jsx","_jsx","jsxs","_jsxs","DangNhap","_ref","navigation","route","_useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","password","setPassword","_useState5","_useState6","verify","setVerify","fetch","then","res","json","data","handleLogin","dbuser","console","log","un","some","elem","userName","email","pwd","userid","filter","index","navigate","userId","View","style","styles","container","children","top","Text","titleScreen","middle","TextInput","onChangeText","e","value","textInputUsername","placeholder","keyboardType","textInputPassword","middle1","textPolicy","Pressable","onPress","_ref2","pressed","textPolicyReadClick","textPolicyRead","_ref3","bottom","_ref4","buttonLogin","backgroundColor","textButtonLogin","StyleSheet","create","height","flex","alignSelf","marginVertical","marginHorizontal","flexDirection","flexWrap","marginTop","fontFamily","fontSize","color","fontWeight","borderRadius","padding","justifyContent"],"sources":["D:/IT - IUH/HKEND/LTDD/MAD-K16-main/MAD-K16-main/09_NguyenVanGiau_Tuan9/lab07/screens/DangNhap.js"],"sourcesContent":["import { Pressable, StyleSheet, Text, TextInput, View } from 'react-native'\nimport React, { useEffect, useState } from 'react'\n\nexport default function DangNhap({ navigation, route }) {\n\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [verify, setVerify] = useState(0);\n\n    useEffect(() => {\n        fetch('http://localhost:3000/dbUser')\n            .then((res) => res.json())\n            .then((data) => {\n                handleLogin(data)\n            })\n    }, [verify]);\n\n    function handleLogin(dbuser) {\n        console.log(username, password);\n\n        if (username || password) {\n            let un = dbuser.some((elem) => (username == elem.userName || username == elem.email))\n\n            let pwd = dbuser.some((elem) => password == elem.password)\n\n            let userid = dbuser.filter((elem, index) => username == elem.userName || username == elem.email);\n\n            if (un) {\n                if (pwd) {\n                    navigation.navigate('Notes', { userid: userid[0].userId })\n                }\n                console.log('Login Failed');\n            } console.log('Login Failed');\n        } else console.log('Please Input!!')\n    }\n\n\n    return (\n        <View style={styles.container}>\n\n            <View style={styles.top}>\n                <Text style={styles.titleScreen}>Login</Text>\n            </View>\n\n            <View style={styles.middle}>\n                <TextInput\n                    onChangeText={(e) => setUsername(e)}\n                    value={username}\n                    style={styles.textInputUsername}\n                    placeholder='Email or User Name (jiag293 hoáº·c jiag293@gmail.com)'\n                    keyboardType='default'\n                ></TextInput>\n                <TextInput\n                    onChangeText={(e) => setPassword(e)}\n                    value={password}\n                    style={styles.textInputPassword}\n                    placeholder='Password (1010101010)'\n                    keyboardType='visible-password'\n                ></TextInput>\n            </View>\n\n            <View style={styles.middle1}>\n                <Text style={styles.textPolicy}>By continuing, you agree to our </Text>\n                <Pressable onPress={() => { }}>\n                    {({ pressed }) => (pressed ? <Text style={styles.textPolicyReadClick}>Terms of Service</Text>\n                        : <Text style={styles.textPolicyRead}>Terms of Service</Text>)}\n                </Pressable>\n                <Text style={styles.textPolicy}> and </Text>\n                <Pressable onPress={() => { }}>\n                    {({ pressed }) => (pressed ? <Text style={styles.textPolicyReadClick}>Privacy Policy.</Text>\n                        : <Text style={styles.textPolicyRead}>Privacy Policy.</Text>)}\n                </Pressable>\n            </View>\n\n            <View style={styles.bottom}>\n                <Pressable\n                    style={({ pressed }) => ([styles.buttonLogin, {\n                        backgroundColor: pressed ? '#c4bbf0' : '#6B4EFF',\n                    }])}\n\n                    onPress={() => setVerify(verify + 1)}\n                >\n                    <Text style={styles.textButtonLogin}>Login</Text>\n                </Pressable>\n            </View>\n\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        backgroundColor: '#FADFE3',\n        height: '100%'\n    },\n    top: {\n        flex: 0.2,\n        alignSelf: 'center',\n    },\n    middle: {\n        flex: 0.2,\n        marginVertical: 100,\n        marginHorizontal: 20,\n    },\n    middle1: {\n        flex: 0.1,\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        marginHorizontal: 20,\n        marginTop: 100,\n\n    },\n    bottom: {\n        flex: 0.15,\n        marginVertical: 20\n    },\n    titleScreen: {\n        fontFamily: 'sans-serif',\n        fontSize: 32,\n        color: '#000000',\n        fontWeight: '700',\n        marginVertical: 20,\n    },\n    textInputUsername: {\n        borderRadius: 10,\n        backgroundColor: '#ffffff',\n        padding: 20,\n        marginVertical: 5,\n        fontSize: 18,\n    },\n    textInputPassword: {\n        borderRadius: 10,\n        backgroundColor: '#ffffff',\n        padding: 20,\n        marginVertical: 5,\n        fontSize: 18,\n    },\n    buttonLogin: {\n        flex: 1,\n        justifyContent: 'center',\n        borderRadius: 30,\n        marginHorizontal: 20,\n    },\n    textButtonLogin: {\n        fontFamily: 'sans-serif',\n        fontSize: 18,\n        fontWeight: '500',\n        color: '#ffffff',\n        alignSelf: 'center',\n    },\n    textPolicy: {\n        fontFamily: 'sans-serif',\n        fontSize: 13,\n        color: '#000000',\n        fontWeight: '300',\n    },\n    textPolicyRead: {\n        fontFamily: 'sans-serif',\n        fontSize: 13,\n        color: '#6B4EFF',\n        fontWeight: '300',\n    },\n    textPolicyReadClick: {\n        fontFamily: 'sans-serif',\n        fontSize: 13,\n        color: '#c4bbf0',\n        fontWeight: '300',\n    },\n})"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}